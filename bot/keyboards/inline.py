"""–ú–æ–¥—É–ª—å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä Telegram –±–æ—Ç–∞"""

from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup

from bot.states.travel import TRAVEL_CATEGORIES


def _add_back_button(
    buttons: list[list[InlineKeyboardButton]],
    back_callback: str = "action:back"
) -> None:
    """–î–æ–±–∞–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫—É '–ù–∞–∑–∞–¥' –∫ —Å–ø–∏—Å–∫—É –∫–Ω–æ–ø–æ–∫"""
    buttons.append([InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=back_callback)])


def get_main_menu_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π"""
    buttons = []
    for category_key, category_name in TRAVEL_CATEGORIES.items():
        button = InlineKeyboardButton(text=category_name, callback_data=f"category:{category_key}")
        buttons.append([button])

    return InlineKeyboardMarkup(inline_keyboard=buttons)


def get_destination_keyboard(show_back_to_menu: bool = True) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è"""
    buttons = [
        [InlineKeyboardButton(text="üåç –ü–æ–¥–æ–±—Ä–∞—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏", callback_data="destination:auto")],
        [InlineKeyboardButton(text="üìç –£–∫–∞–∑–∞—Ç—å –≥–æ—Ä–æ–¥/—Å—Ç—Ä–∞–Ω—É", callback_data="destination:manual")],
    ]

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥" (–∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞)
    if show_back_to_menu:
        buttons.append([InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="action:menu")])

    return InlineKeyboardMarkup(inline_keyboard=buttons)


def get_family_size_keyboard(show_back: bool = True) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–∞–∑–º–µ—Ä–∞ —Å–µ–º—å–∏"""
    buttons = [
        [InlineKeyboardButton(text="2 –≤–∑—Ä–æ—Å–ª—ã—Ö", callback_data="family_size:2+0")],
        [InlineKeyboardButton(text="2 –≤–∑—Ä–æ—Å–ª—ã—Ö + 1 —Ä–µ–±–µ–Ω–æ–∫", callback_data="family_size:2+1")],
        [InlineKeyboardButton(text="2 –≤–∑—Ä–æ—Å–ª—ã—Ö + 2 –¥–µ—Ç–µ–π", callback_data="family_size:2+2")],
        [InlineKeyboardButton(text="–î—Ä—É–≥–æ–µ", callback_data="family_size:other")],
    ]

    if show_back:
        _add_back_button(buttons)

    return InlineKeyboardMarkup(inline_keyboard=buttons)


def get_travel_time_keyboard(show_back: bool = True) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤—Ä–µ–º–µ–Ω–∏ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è"""
    buttons = [
        [InlineKeyboardButton(text="–ë–ª–∏–∂–∞–π—à–∏–π –º–µ—Å—è—Ü", callback_data="time:month")],
        [InlineKeyboardButton(text="–ß–µ—Ä–µ–∑ 2-3 –º–µ—Å—è—Ü–∞", callback_data="time:quarter")],
        [InlineKeyboardButton(text="–ß–µ—Ä–µ–∑ –ø–æ–ª–≥–æ–¥–∞", callback_data="time:half_year")],
    ]

    if show_back:
        _add_back_button(buttons)

    return InlineKeyboardMarkup(inline_keyboard=buttons)


def get_family_priority_keyboard(show_back: bool = True) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–≤ —Å–µ–º–µ–π–Ω–æ–≥–æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è"""
    buttons = [
        [InlineKeyboardButton(text="–ú–æ—Ä–µ/–ø–ª—è–∂", callback_data="priority:beach")],
        [InlineKeyboardButton(text="–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è", callback_data="priority:entertainment")],
        [InlineKeyboardButton(text="–ö—É–ª—å—Ç—É—Ä–∞", callback_data="priority:culture")],
    ]

    if show_back:
        _add_back_button(buttons)

    return InlineKeyboardMarkup(inline_keyboard=buttons)


def get_pet_type_keyboard(show_back: bool = True) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –ø–∏—Ç–æ–º—Ü–∞"""
    buttons = [
        [InlineKeyboardButton(text="–°–æ–±–∞–∫–∞ –º–∞–ª–∞—è", callback_data="pet:small_dog")],
        [InlineKeyboardButton(text="–°–æ–±–∞–∫–∞ –∫—Ä—É–ø–Ω–∞—è", callback_data="pet:large_dog")],
        [InlineKeyboardButton(text="–ö–æ—à–∫–∞", callback_data="pet:cat")],
    ]

    if show_back:
        _add_back_button(buttons)

    return InlineKeyboardMarkup(inline_keyboard=buttons)


def get_transport_keyboard(show_back: bool = True) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞"""
    buttons = [
        [InlineKeyboardButton(text="–ê–≤—Ç–æ", callback_data="transport:car")],
        [InlineKeyboardButton(text="–ü–æ–µ–∑–¥", callback_data="transport:train")],
        [InlineKeyboardButton(text="–°–∞–º–æ–ª–µ—Ç", callback_data="transport:plane")],
    ]

    if show_back:
        _add_back_button(buttons)

    return InlineKeyboardMarkup(inline_keyboard=buttons)


def get_duration_keyboard(show_back: bool = True) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –ø–æ–µ–∑–¥–∫–∏"""
    buttons = [
        [InlineKeyboardButton(text="–í—ã—Ö–æ–¥–Ω—ã–µ", callback_data="duration:weekend")],
        [InlineKeyboardButton(text="–ù–µ–¥–µ–ª—è", callback_data="duration:week")],
        [InlineKeyboardButton(text="2+ –Ω–µ–¥–µ–ª–∏", callback_data="duration:long")],
    ]

    if show_back:
        _add_back_button(buttons)

    return InlineKeyboardMarkup(inline_keyboard=buttons)


def get_photo_type_keyboard(show_back: bool = True) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π"""
    buttons = [
        [InlineKeyboardButton(text="–ü—Ä–∏—Ä–æ–¥–∞", callback_data="photo:nature")],
        [InlineKeyboardButton(text="–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞", callback_data="photo:architecture")],
        [InlineKeyboardButton(text="–°—Ç—Ä–∏—Ç-—Ñ–æ—Ç–æ", callback_data="photo:street")],
    ]

    if show_back:
        _add_back_button(buttons)

    return InlineKeyboardMarkup(inline_keyboard=buttons)


def get_difficulty_keyboard(show_back: bool = True) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –º–∞—Ä—à—Ä—É—Ç–∞"""
    buttons = [
        [InlineKeyboardButton(text="–¢–æ–ª—å–∫–æ –ª–µ–≥–∫–∏–µ –º–µ—Å—Ç–∞", callback_data="difficulty:easy")],
        [InlineKeyboardButton(text="–ì–æ—Ç–æ–≤ –∫ —Ç—Ä–µ–∫–∫–∏–Ω–≥—É", callback_data="difficulty:hard")],
    ]

    if show_back:
        _add_back_button(buttons)

    return InlineKeyboardMarkup(inline_keyboard=buttons)


def get_budget_keyboard(show_back: bool = True) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –±—é–¥–∂–µ—Ç–∞"""
    buttons = [
        [InlineKeyboardButton(text="–î–æ 30 000‚ÇΩ", callback_data="budget:30000")],
        [InlineKeyboardButton(text="30-50 —Ç—ã—Å‚ÇΩ", callback_data="budget:50000")],
        [InlineKeyboardButton(text="50-80 —Ç—ã—Å‚ÇΩ", callback_data="budget:80000")],
    ]

    if show_back:
        _add_back_button(buttons)

    return InlineKeyboardMarkup(inline_keyboard=buttons)


def get_budget_days_keyboard(show_back: bool = True) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –¥–Ω–µ–π –ø–æ–µ–∑–¥–∫–∏"""
    buttons = [
        [InlineKeyboardButton(text="3-4 –¥–Ω—è", callback_data="days:short")],
        [InlineKeyboardButton(text="–ù–µ–¥–µ–ª—è", callback_data="days:week")],
        [InlineKeyboardButton(text="10+ –¥–Ω–µ–π", callback_data="days:long")],
    ]

    if show_back:
        _add_back_button(buttons)

    return InlineKeyboardMarkup(inline_keyboard=buttons)


def get_included_keyboard(show_back: bool = True) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤–∫–ª—é—á–µ–Ω–Ω—ã—Ö —É—Å–ª—É–≥"""
    buttons = [
        [InlineKeyboardButton(text="–¢–æ–ª—å–∫–æ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏–µ", callback_data="included:accommodation")],
        [InlineKeyboardButton(text="–í—Å–µ –≤–∫–ª—é—á–µ–Ω–æ", callback_data="included:all")],
    ]

    if show_back:
        _add_back_button(buttons)

    return InlineKeyboardMarkup(inline_keyboard=buttons)


def get_activity_type_keyboard(show_back: bool = True) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏"""
    buttons = [
        [InlineKeyboardButton(text="–ì–æ—Ä—ã/—Ç—Ä–µ–∫–∫–∏–Ω–≥", callback_data="activity:mountains")],
        [InlineKeyboardButton(text="–í–µ–ª–æ", callback_data="activity:cycling")],
        [InlineKeyboardButton(text="–í–æ–¥–Ω—ã–π —Å–ø–æ—Ä—Ç", callback_data="activity:water")],
    ]

    if show_back:
        _add_back_button(buttons)

    return InlineKeyboardMarkup(inline_keyboard=buttons)


def get_skill_level_keyboard(show_back: bool = True) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —É—Ä–æ–≤–Ω—è –Ω–∞–≤—ã–∫–æ–≤"""
    buttons = [
        [InlineKeyboardButton(text="–ù–æ–≤–∏—á–æ–∫", callback_data="skill:beginner")],
        [InlineKeyboardButton(text="–õ—é–±–∏—Ç–µ–ª—å", callback_data="skill:amateur")],
        [InlineKeyboardButton(text="–ü—Ä–æ—Ñ–∏", callback_data="skill:pro")],
    ]

    if show_back:
        _add_back_button(buttons)

    return InlineKeyboardMarkup(inline_keyboard=buttons)


def get_result_actions_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –¥–µ–π—Å—Ç–≤–∏—è–º–∏ –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞"""
    buttons = [
        [
            InlineKeyboardButton(text="üîÑ –î—Ä—É–≥–æ–π –≤–∞—Ä–∏–∞–Ω—Ç", callback_data="action:retry"),
            InlineKeyboardButton(text="üì§ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è", callback_data="action:share"),
        ],
        [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="action:menu")],
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)


def get_new_search_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –Ω–∞—á–∞–ª–∞ –Ω–æ–≤–æ–≥–æ –ø–æ–∏—Å–∫–∞"""
    buttons = [
        [InlineKeyboardButton(text="üîç –ù–æ–≤—ã–π –ø–æ–∏—Å–∫", callback_data="action:new_search")],
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)
